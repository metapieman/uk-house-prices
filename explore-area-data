#! /usr/bin/env python

import pandas as pd
import pylab
import sys

data_files = sys.argv[1:]

dfs = []
for file in data_files:
    dfs.append(pd.read_csv(file, parse_dates=['DATE']))

df = pd.concat(dfs)

df['MONTH'] = df.DATE.dt.to_period('M')
df['PRICE_PER_SQUARE_METRE'] = df.PRICE/df.TOTAL_FLOOR_AREA

# Remove erroneous points
df = df.query('TOTAL_FLOOR_AREA!=0')

def per_square_metre_by_postcode(postcode_regex):
    return df[df.POSTCODE.str.contains(postcode_regex)].groupby(
        'MONTH').PRICE_PER_SQUARE_METRE.median()

def per_square_metre_by_postcode_and_type(postcode_regex, stat='median'):
    grouped = df[df.POSTCODE.str.contains(postcode_regex)].groupby([
        'MONTH', 'PROPERTY_TYPE']).PRICE_PER_SQUARE_METRE
    output = getattr(grouped, stat)().reset_index()
    return pd.pivot_table(
        output, values='PRICE_PER_SQUARE_METRE',
        index='MONTH', columns=['PROPERTY_TYPE']
    )

def forensic(postcode_regex):
    psq_min = per_square_metre_by_postcode_and_type(postcode_regex, stat='min')
    psq_max = per_square_metre_by_postcode_and_type(postcode_regex, stat='max')
    psq_med = per_square_metre_by_postcode_and_type(postcode_regex, stat='median')
    for ptype in ('House', 'Flat'):
        pylab.figure()
        ax = psq_med[ptype].plot(color='b')
        psq_min[ptype].plot(ax=ax, color='b', linestyle=':')
        psq_max[ptype].plot(ax=ax, color='b', linestyle=':')
        ax.set_title('%ss in %s'% (ptype, postcode_regex))
    pylab.show()


import IPython; IPython.embed()
